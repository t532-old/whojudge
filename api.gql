scalar Json

type Contest {
    contestMode: String
    sortedParticipants: [Participant!]
}

type Scope {
    id: ID!
    creator: User!
    title: String!
    problems: [Problem!]!
    isSorted: Boolean!
    sortedProblems: [Problem!]!
    participants: [Participant!]!
    isLinear: Boolean!
    skippable: Int
    isContest: Boolean!
    contest: Contest
    description: String!
    visible: Boolean!
    from: Int!
    to: Int!
    createdAt: String!
    updatedAt: String!
}

type Example {
    input: String!
    output: String!
}

type Testcase {
    time: Int!
    memory: Int!
    point: Int!
}

type Problem {
    id: ID!
    scope: Scope!
    creator: User!
    title: String!
    hasStory: Boolean!
    story: String
    background: String!
    description: String!
    inputFormat: String!
    outputFormat: String!
    tips: String!
    examples: [Example!]!
    testcases: [Testcase!]!
    spj: String!
    tags: [String!]!
    isReady: Boolean!
    visible: Boolean!
    nAccepted: Int!
    nAttempted: Int!
    submissions: [Submission!]!
    createdAt: String!
    updatedAt: String!
}

enum TestcaseStatus {
    JUDGING,
    ACCEPTED,
    WRONG_ANSWER,
    PARTIALLY_CORRECT,
    TIME_LIMIT_EXCEEDED,
    MEMORY_LIMIT_EXCEEDED,
    OUTPUT_LIMIT_EXCEEDED,
    RUNTIME_ERROR,
    SPECIAL_JUDGE_ERROR,
    COMPILE_ERROR,
    UNKNOWN_ERROR,
}

type TestcaseResult {
    time: Int!
    memory: Int!
    point: Int!
    status: TestcaseStatus!
}

enum SubmissionStatus {
    JUDGING,
    ACCEPTED,
    NOT_ACCEPTED,
    COMPILE_ERR,
}

type Submission {
    id: ID!
    user: User!
    problem: Problem!
    code: String
    language: String!
    status: SubmissionStatus!
    score: Int!
    detail: [TestcaseResult!]!
    createdAt: String!
    updatedAt: String!
}

type Participant {
    id: ID!
    scope: Scope!
    user: User!
    step: Int
    skippedStep: Int
    score: [Json!]
    createdAt: String!
    updatedAt: String!
}

type Token {
    id: ID!
    user: User!
}

type User {
    id: ID!
    username: String!
    introduction: String!
    acceptedProblems: [Problem!]!
    attemptedProblems: [Problem!]!
    isAdmin: Boolean!
    scopes: [Scope!]!
    participants: [Participant!]!
    submissions: [Submission!]!
    problems: [Problem!]!
    createdAt: String!
    updatedAt: String!
    lastSubmitAt: String!
}
