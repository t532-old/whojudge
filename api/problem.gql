extend type Query {
    problem(id: ID!): Problem @auth
    problems(
        scope: ID!
        where: ProblemWhereInput
        orderBy: ProblemOrderByInput
        skip: Int
        first: Int
        last: Int
    ): [Problem]! @auth
}

extend type Mutation {
    createProblem(scope: ID!): Problem! @auth @admin
    updateProblem(
        id: ID!
        data: ProblemUpdateInput
    ): Problem @auth @admin
    deleteProblem(id: ID!): Problem @auth @admin
    uploadTestcaseFile(
        id: ID!
        idx: Int!
        file: Upload!
    ): File @auth @admin
}

input ProblemWhereInput {
    id: ID
    creator: String
    title: [String!]
    hasStory: Boolean
    isReady: Boolean
    visible: Boolean
    nAccepted_lte: Int
    nAccepted_gte: Int
    nAttempted_lte: Int
    nAttempted_gte: Int
    createdAt_lte: String
    createdAt_gte: String
    updatedAt_lte: String
    updatedAt_gte: String
    tags: [String!]
}

enum ProblemOrderByInput {
    title_ASC
    title_DESC
    nAccepted_ASC
    nAccepted_DESC
    nAttempted_ASC
    nAttempted_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
}

input ExampleUpdateInput {
    input: String!
    output: String!
}

input TestcaseUpdateInput {
    time: Int!
    memory: Int!
    point: Int!
}

input ProblemUpdateInput {
    scope: ID
    title: String
    story: String
    background: String
    description: String
    inputFormat: String
    outputFormat: String
    tips: String
    stdAnswer: String
    examples: [ExampleUpdateInput!]
    testcases: [TestcaseUpdateInput!]
    spj: String
    tags: [String!]
    visible: Boolean
}

type Example {
    input: String!
    output: String!
}

type Testcase {
    time: Int!
    memory: Int!
    point: Int!
    isReady: Boolean!
}

type Problem {
    id: ID!
    scope: Scope!
    creator: User!
    title: String!
    story: String!
    background: String!
    description: String!
    inputFormat: String!
    outputFormat: String!
    tips: String!
    stdAnswer: String!
    examples: [Example!]!
    testcases: [Testcase!]!
    spj: String!
    tags: [String!]!
    visible: Boolean!
    nAccepted: Int!
    nAttempted: Int!
    submissions: [Submission!]!
    createdAt: String!
    updatedAt: String!
}
