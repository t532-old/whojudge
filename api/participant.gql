extend type Query {
    participant(id: ID!): Participant
        @retrieve(collection: "participant")
        @ifAuth
    # participants: Searching is unsupported
}

extend type Mutation {
    createParticipant(scope: ID!): Participant
        @ifScopeNotEnded
        @inferScope
        @ifAuth
    skipParticipantStep(id: ID!): Participant
        @ifOwns
        @retrieve(collection: "participant")
        @ifAuth
    deleteParticipant(id: ID!): Participant
        @ifAdmin
        @ifAuth
}

type Participant {
    id: ID!
    scope: Scope!
        @filterVisibility
    user: User!
    step: Int
    skippedStep: Int
    score: [Json!]
    createdAt: String!
    updatedAt: String!
}
